Relational:
How columns(attributes) relate to each other to define a thing(object,row).
Note: Relational does not mean multiple tables relating to each other. It is putting related dated in one table.

Things to consider when creating a table:
1. What is the main thing you want your table to be about?
2. How will you use this table (list of information)?
3. How can you most easily query the table (information breakdown)?

Atomic data:
Smallest pieces of data that can't or shouldn't be divided further.

Questions to ask to put atomic data in your table:
1. What is the one thing that your table describes?
2. How will you use the table to get at the one thing?
3. Do your columns contain atomic data to make your queries short an to the point?

Rules for atomic data:
1. A column with atomic data can't have several values of the same type of data.
2. A table with atomic data can't have several columns with the same type of data.

Normalization:
Is to organize data inorder to reduce redundancy and improve data integrity.

1NF:
- Each row of data must contain atomic values.
- Each row must have an unique identifier known as a Primary Key.

Primary Key: Is a column in the table that makes each record unique.
- A primary key can't be NULL.
- It must be given a value when the record is inserted.
- It must be compact.
- It can't be changed.

Foreign Key: Is a column in table that references the Primary Key of another table.
- It can have a different name than the primary key it comes from.
- The primary key used by a foreign key is also known as parent key. The table where the primary key is from is known as a parent table.
- The foreign key can be used to make sure that the rows in one table have corresponding rows in another table.
- Foreign key values can be NULL eventhough primary key values can't.
- Foreign key values don't have to be unique, infact often they aren't.

Scchema:
A representation of all the structures, such as tables and columns in the database, along with how they connect.
